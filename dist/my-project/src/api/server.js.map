{"version":3,"sources":["../../../../my-project/src/api/server.js"],"names":["request","axios","create","baseURL","process","env","BASE_API","timeout","interceptors","use","config","reject","error","response","get","url","params","method"],"mappings":";;;;;;;;;;AAAA;;;;;;AAEA,IAAMA,UAAQC,gBAAMC,MAAN,CAAa;AACzBC,WAAQC,QAAQC,GAAR,CAAYC,QADK;AAEzBC,WAAQ;AAFiB,CAAb,CAAd;;AAKA;AACAP,QAAQQ,YAAR,CAAqBR,OAArB,CAA6BS,GAA7B,CAAiC,kBAAU;AACzC;AACA;AACA,SAAOC,MAAP;AACD,CAJD,EAIE,iBAAS;AACT,SAAO,kBAAQC,MAAR,CAAeC,KAAf,CAAP;AACD,CAND;;AAQA;AACAZ,QAAQQ,YAAR,CAAqBK,QAArB,CAA8BJ,GAA9B,CAAkC,oBAAY;AAC5C,SAAOI,QAAP;AACD,CAFD,EAEE,iBAAS;AACT,SAAO,kBAAQF,MAAR,CAAeC,KAAf,CAAP;AACD,CAJD;;kBAMe;AACf;AACEE,KAFa,eAETC,GAFS,EAELC,MAFK,EAEE;AACb,WAAOhB,QAAQ;AACbe,cADa;AAEbC,oBAFa;AAGbC,cAAO;AAHM,KAAR,CAAP;AAKD;AARY,C","file":"server.js","sourcesContent":["import axios from \"axios\";\n\nconst request=axios.create({\n  baseURL:process.env.BASE_API,\n  timeout:15000,\n})\n\n// 请求拦截器\nrequest.interceptors.request.use(config => {\n  // 在每次发送请求前，会先执行这里面的逻辑\n  // console.log('调用接口，经过的拦截器');\n  return config;\n},error => {\n  return Promise.reject(error)\n});\n\n// 相应拦截器\nrequest.interceptors.response.use(response => {\n  return response;\n},error => {\n  return Promise.reject(error)\n});\n\nexport default {\n// 使用es 6 的简化写法\n  get(url,params){\n    return request({\n      url,\n      params,\n      method:'get'\n    })\n  }\n}\n"]}