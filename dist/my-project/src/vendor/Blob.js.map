{"version":3,"sources":["../../../../my-project/src/vendor/Blob.js"],"names":["view","URL","webkitURL","Blob","e","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","get_class","object","Object","prototype","toString","call","match","FakeBlobBuilder","data","FakeBlob","type","encoding","size","length","FBB_proto","FB_proto","FileReaderSync","FileException","code","name","file_ex_codes","split","file_ex_code","real_URL","real_create_object_URL","createObjectURL","real_revoke_object_URL","revokeObjectURL","btoa","atob","ArrayBuffer","Uint8Array","fake","blob","data_URI_header","decodeURIComponent","encodeURIComponent","object_URL","substring","append","bb","str","buf","i","buf_len","String","fromCharCode","push","fr","readAsBinaryString","unescape","getBlob","arguments","join","slice","start","end","args","close","blobParts","options","builder","len","self","window","content"],"mappings":"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","file":"Blob.js","sourcesContent":["/* eslint-disable */\n/* Blob.js\n * A Blob implementation.\n * 2014-05-27\n *\n * By Eli Grey, http://eligrey.com\n * By Devin Samarin, https://github.com/eboyjr\n * License: X11/MIT\n *   See LICENSE.md\n */\n\n/*global self, unescape */\n/*jslint bitwise: true, regexp: true, confusion: true, es5: true, vars: true, white: true,\n plusplus: true */\n\n/*! @source http://purl.eligrey.com/github/Blob.js/blob/master/Blob.js */\n\n(function (view) {\n    \"use strict\";\n\n    view.URL = view.URL || view.webkitURL;\n\n    if (view.Blob && view.URL) {\n        try {\n            new Blob;\n            return;\n        } catch (e) {}\n    }\n\n    // Internally we use a BlobBuilder implementation to base Blob off of\n    // in order to support older browsers that only have BlobBuilder\n    var BlobBuilder = view.BlobBuilder || view.WebKitBlobBuilder || view.MozBlobBuilder || (function(view) {\n            var\n                get_class = function(object) {\n                    return Object.prototype.toString.call(object).match(/^\\[object\\s(.*)\\]$/)[1];\n                }\n                , FakeBlobBuilder = function BlobBuilder() {\n                    this.data = [];\n                }\n                , FakeBlob = function Blob(data, type, encoding) {\n                    this.data = data;\n                    this.size = data.length;\n                    this.type = type;\n                    this.encoding = encoding;\n                }\n                , FBB_proto = FakeBlobBuilder.prototype\n                , FB_proto = FakeBlob.prototype\n                , FileReaderSync = view.FileReaderSync\n                , FileException = function(type) {\n                    this.code = this[this.name = type];\n                }\n                , file_ex_codes = (\n                    \"NOT_FOUND_ERR SECURITY_ERR ABORT_ERR NOT_READABLE_ERR ENCODING_ERR \"\n                    + \"NO_MODIFICATION_ALLOWED_ERR INVALID_STATE_ERR SYNTAX_ERR\"\n                ).split(\" \")\n                , file_ex_code = file_ex_codes.length\n                , real_URL = view.URL || view.webkitURL || view\n                , real_create_object_URL = real_URL.createObjectURL\n                , real_revoke_object_URL = real_URL.revokeObjectURL\n                , URL = real_URL\n                , btoa = view.btoa\n                , atob = view.atob\n\n                , ArrayBuffer = view.ArrayBuffer\n                , Uint8Array = view.Uint8Array\n                ;\n            FakeBlob.fake = FB_proto.fake = true;\n            while (file_ex_code--) {\n                FileException.prototype[file_ex_codes[file_ex_code]] = file_ex_code + 1;\n            }\n            if (!real_URL.createObjectURL) {\n                URL = view.URL = {};\n            }\n            URL.createObjectURL = function(blob) {\n                var\n                    type = blob.type\n                    , data_URI_header\n                    ;\n                if (type === null) {\n                    type = \"application/octet-stream\";\n                }\n                if (blob instanceof FakeBlob) {\n                    data_URI_header = \"data:\" + type;\n                    if (blob.encoding === \"base64\") {\n                        return data_URI_header + \";base64,\" + blob.data;\n                    } else if (blob.encoding === \"URI\") {\n                        return data_URI_header + \",\" + decodeURIComponent(blob.data);\n                    } if (btoa) {\n                        return data_URI_header + \";base64,\" + btoa(blob.data);\n                    } else {\n                        return data_URI_header + \",\" + encodeURIComponent(blob.data);\n                    }\n                } else if (real_create_object_URL) {\n                    return real_create_object_URL.call(real_URL, blob);\n                }\n            };\n            URL.revokeObjectURL = function(object_URL) {\n                if (object_URL.substring(0, 5) !== \"data:\" && real_revoke_object_URL) {\n                    real_revoke_object_URL.call(real_URL, object_URL);\n                }\n            };\n            FBB_proto.append = function(data/*, endings*/) {\n                var bb = this.data;\n                // decode data to a binary string\n                if (Uint8Array && (data instanceof ArrayBuffer || data instanceof Uint8Array)) {\n                    var\n                        str = \"\"\n                        , buf = new Uint8Array(data)\n                        , i = 0\n                        , buf_len = buf.length\n                        ;\n                    for (; i < buf_len; i++) {\n                        str += String.fromCharCode(buf[i]);\n                    }\n                    bb.push(str);\n                } else if (get_class(data) === \"Blob\" || get_class(data) === \"File\") {\n                    if (FileReaderSync) {\n                        var fr = new FileReaderSync;\n                        bb.push(fr.readAsBinaryString(data));\n                    } else {\n                        // async FileReader won't work as BlobBuilder is sync\n                        throw new FileException(\"NOT_READABLE_ERR\");\n                    }\n                } else if (data instanceof FakeBlob) {\n                    if (data.encoding === \"base64\" && atob) {\n                        bb.push(atob(data.data));\n                    } else if (data.encoding === \"URI\") {\n                        bb.push(decodeURIComponent(data.data));\n                    } else if (data.encoding === \"raw\") {\n                        bb.push(data.data);\n                    }\n                } else {\n                    if (typeof data !== \"string\") {\n                        data += \"\"; // convert unsupported types to strings\n                    }\n                    // decode UTF-16 to binary string\n                    bb.push(unescape(encodeURIComponent(data)));\n                }\n            };\n            FBB_proto.getBlob = function(type) {\n                if (!arguments.length) {\n                    type = null;\n                }\n                return new FakeBlob(this.data.join(\"\"), type, \"raw\");\n            };\n            FBB_proto.toString = function() {\n                return \"[object BlobBuilder]\";\n            };\n            FB_proto.slice = function(start, end, type) {\n                var args = arguments.length;\n                if (args < 3) {\n                    type = null;\n                }\n                return new FakeBlob(\n                    this.data.slice(start, args > 1 ? end : this.data.length)\n                    , type\n                    , this.encoding\n                );\n            };\n            FB_proto.toString = function() {\n                return \"[object Blob]\";\n            };\n            FB_proto.close = function() {\n                this.size = this.data.length = 0;\n            };\n            return FakeBlobBuilder;\n        }(view));\n\n    view.Blob = function Blob(blobParts, options) {\n        var type = options ? (options.type || \"\") : \"\";\n        var builder = new BlobBuilder();\n        if (blobParts) {\n            for (var i = 0, len = blobParts.length; i < len; i++) {\n                builder.append(blobParts[i]);\n            }\n        }\n        return builder.getBlob(type);\n    };\n}(typeof self !== \"undefined\" && self || typeof window !== \"undefined\" && window || this.content || this));\n"]}